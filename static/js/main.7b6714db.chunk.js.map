{"version":3,"sources":["components/Searchbar/Searchbar.js","services/pixabay.js","components/ImageGallery/ImageGalleryItem.js","components/Button/Button.js","components/Modal/Modal.js","components/ImageGallery/ImageGallery.js","App.js","index.js"],"names":["Searchbar","state","searchValue","searchResults","handleSearchChange","e","setState","currentTarget","value","toLowerCase","handleSubmit","event","preventDefault","props","onSubmit","className","this","type","autoComplete","autoFocus","placeholder","onChange","Component","PixabayFetch","base_url","api_key","_searchQuery","_page","params","searchQuery","page","url","axios","get","then","result","data","hits","catch","err","console","log","ImageGalleryItem","onClick","obj","id","src","webformatURL","alt","tags","Button","modalRoot","document","querySelector","Modal","handleKeydown","code","onClose","handleBackdropClick","target","window","addEventListener","removeEventListener","createPortal","newPixabayFetch","ImageGallery","isLoading","showModal","currentImg","handleClick","searchPhotos","prevState","scrollTo","top","documentElement","scrollHeight","behavior","alert","toggleModal","onClickImg","prevProps","resetPage","length","map","item","color","height","width","timeout","largeImageURL","App","handleFormSubmit","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.7b6714db.chunk.js","sourcesContent":["import { Component } from 'react';\nimport PropTypes from 'prop-types';\nexport default class Searchbar extends Component {\n  state = {\n    searchValue: '',\n    searchResults: [],\n  };\n  handleSearchChange = e => {\n    this.setState({ searchValue: e.currentTarget.value.toLowerCase() });\n  };\n  handleSubmit = event => {\n    event.preventDefault();\n    this.props.onSubmit(this.state.searchValue);\n    this.setState({ searchValue: '' });\n  };\n\n  render() {\n    return (\n      <header className=\"Searchbar\">\n        <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\n          <button type=\"submit\" className=\"SearchForm-button\">\n            <span className=\"SearchForm-button-label\">Search</span>\n          </button>\n\n          <input\n            className=\"SearchForm-input\"\n            type=\"text\"\n            value={this.state.searchValue}\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search images and photos\"\n            onChange={this.handleSearchChange}\n          />\n        </form>\n      </header>\n    );\n  }\n}\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import axios from 'axios';\nexport class PixabayFetch {\n  constructor(base_url, api_key) {\n    this.base_url = base_url;\n    this.api_key = api_key;\n    this._searchQuery = '';\n    this._page = 1;\n  }\n  get searchQuery() {\n    return this._searchQuery;\n  }\n  set searchQuery(value) {\n    return (this._searchQuery = value);\n  }\n  get page() {\n    return this._page;\n  }\n  set page(value) {\n    return (this._page += value);\n  }\n  resetPage() {\n    return (this._page = 1);\n  }\n\n  searchPhotos() {\n    let params = `?q=${this.searchQuery}&page=${this.page}&key=${this.api_key}&image_type=photo&orientation=horizontal&per_page=12`;\n    let url = `${this.base_url}${params}`;\n    return axios\n      .get(url)\n      .then(result => {\n        return result.data.hits;\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  }\n}\n","import PropTypes from 'prop-types';\n\nexport function ImageGalleryItem({ onClick, obj }) {\n  return (\n    <li className=\"ImageGalleryItem\">\n      <img\n        id={obj.id}\n        src={obj.webformatURL}\n        alt={obj.tags}\n        className=\"ImageGalleryItem-image\"\n        onClick={() => {\n          onClick(obj);\n        }}\n      />\n    </li>\n  );\n}\nImageGalleryItem.propTypes = {\n  onClick: PropTypes.func,\n  obj: PropTypes.object,\n};\n","import PropTypes from 'prop-types';\nexport default function Button({ onClick }) {\n  return (\n    <button type=\"button\" className=\"Button\" onClick={onClick}>\n      Load more\n    </button>\n  );\n}\nButton.propTypes = {\n  onClick: PropTypes.func,\n};\n","import React, { Component } from 'react';\nimport { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\nconst modalRoot = document.querySelector('#modalRoot');\nexport default class Modal extends Component {\n  componentDidMount() {\n    window.addEventListener('keydown', this.handleKeydown);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.handleKeydown);\n  }\n\n  handleKeydown = e => {\n    if (e.code === 'Escape') {\n      console.log('press esc');\n      this.props.onClose();\n    }\n  };\n\n  handleBackdropClick = event => {\n    if (event.currentTarget === event.target) {\n      this.props.onClose();\n    }\n  };\n\n  render() {\n    return createPortal(\n      <div className=\"Overlay\" onClick={this.handleBackdropClick}>\n        <div className=\"Modal\">\n          <img src={this.props.src} alt={this.props.alt} />\n        </div>\n      </div>,\n      modalRoot,\n    );\n  }\n}\nModal.propTypes = {\n  onClose: PropTypes.func,\n  src: PropTypes.string,\n  alt: PropTypes.string,\n};\n","import { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { PixabayFetch } from '../../services/pixabay';\nimport { ImageGalleryItem } from './ImageGalleryItem';\nimport Button from '../Button/Button';\nimport Modal from '../Modal/Modal';\nimport Loader from 'react-loader-spinner';\n\n\nconst base_url = 'https://pixabay.com/api/';\nconst api_key = '23237261-94e774dc3474a501c481a5592';\n\nconst newPixabayFetch = new PixabayFetch(base_url, api_key);\n\nexport class ImageGallery extends Component {\n  state = {\n    searchResults: [],\n    isLoading: false,\n    showModal: false,\n    currentImg: '',\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.searchValue !== this.props.searchValue) {\n      this.setState({isLoading:true});\n      newPixabayFetch.resetPage();\n      newPixabayFetch.searchQuery = this.props.searchValue;\n      newPixabayFetch\n        .searchPhotos()\n        .then(searchResults => {\n          this.setState({ searchResults, isLoading: false });\n        })\n        .catch(err => {\n          alert('Error! Try again!')\n          console.log(err)})\n    }\n  }\n  handleClick = () => {\n    this.setState({isLoading:true});\n    newPixabayFetch.page = 1;\n    newPixabayFetch\n      .searchPhotos()\n      .then(searchResults => {\n        this.setState(prevState => ({\n          isLoading: false,\n          searchResults: [...prevState.searchResults, ...searchResults],\n        })\n        );\n        window.scrollTo({\n              top: document.documentElement.scrollHeight,\n              behavior: 'smooth',\n            });\n      })\n      .catch(err => {\n        alert('Error! Try again!')\n        console.log(err)})\n  };\n\n  toggleModal = () => {\n    this.setState(({ showModal }) => ({\n      showModal: !showModal,\n    }));\n  };\n  onClickImg = obj => {\n    // console.log(obj)\n    this.setState({ currentImg: obj });\n    this.toggleModal();\n  };\n\n  render() {\n    const { searchResults, isLoading, showModal, currentImg } = this.state;\n      return (\n        <>\n          <ul className=\"ImageGallery\">\n            {searchResults.length > 0 &&\n              searchResults.map(item => {\n                return (\n                  <ImageGalleryItem\n                    key={item.id}\n                    obj={item}\n                    onClick={this.onClickImg}\n                  />\n                );\n              })}\n          </ul>\n\n          {isLoading&&(<Loader\n          type=\"Grid\"\n          color=\"#00BFFF\"\n          height={100}\n          width={100}\n          timeout={3000} //3 secs\n        />)}\n\n          {searchResults.length > 0 && <Button onClick={this.handleClick} />}\n    \n          {showModal && (\n            <Modal\n              onClose={this.toggleModal}\n              src={currentImg.largeImageURL}\n              alt={currentImg.tags}\n            ></Modal>\n          )}\n        </>\n      );\n    }\n}\nImageGallery.propTypes = {\n  searchValue: PropTypes.string,\n};\n","import './App.css';\nimport React, { Component } from 'react';\nimport Searchbar from './components/Searchbar/Searchbar';\nimport { ImageGallery } from './components/ImageGallery/ImageGallery';\n\nclass App extends Component {\n  state = {\n    searchValue: '',\n  };\n\n  handleFormSubmit = searchValue => {\n    this.setState({ searchValue });\n  };\n\n  render() {\n    const { searchValue } = this.state;\n\n    return (\n      <div className=\"App\">\n        <Searchbar onSubmit={this.handleFormSubmit}></Searchbar>\n        <ImageGallery searchValue={searchValue}></ImageGallery>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}